<launch>
  <!-- Load robot description -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find rover_description)/urdf/rover_description.urdf'"/>

  <!-- Start Gazebo simulation -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <!-- Spawn the robot model into Gazebo -->
  <node name="spawn_rover" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -param robot_description -model rover -x 0 -y 0 -z 0.2" />

  <!-- Robot State Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Joint State Publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- EKF Localization Node (from rover_control) -->
  <node name="ekf_localization_local" pkg="robot_localization" type="ekf_localization_node" output="screen">
    <rosparam command="load" file="$(find rover_control)/config/localization.yaml" />
  </node>

  <!-- Static transform from map to odom -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom"
        args="0 0 0 0 0 0 map odom" />

  <!-- Move Base Node -->
  <node name="move_base" pkg="move_base" type="move_base" output="screen">
    <rosparam file="$(find rover_control)/config/pid.yaml" command="load" />
    <rosparam file="$(find rover_navigation)/config/costmap_global_laser.yaml" command="load" />
    <rosparam file="$(find rover_navigation)/config/costmap_local.yaml" command="load" />
    <rosparam file="$(find rover_navigation)/config/planner.yaml" command="load" />
  </node>

  <!-- RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rover_navigation)/config/rover_nav.rviz" />
</launch>
